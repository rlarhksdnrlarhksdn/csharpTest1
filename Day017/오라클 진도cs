#SUB QUERY
사원이름의 'JONES'인 사원 급여 출력
SELECT SAL FROM EMP
WHERE ENAME = 'JONES';

#급여가 2975보다 높은 사원 정보 출력
SELECT * FROM EMP
WHERE SAL > 2975;

#급여가 'JONES'보다 높은 사원의 정보출력
SELECT ENAME, SAL FROM EMP
WHERE SAL > (SELECT SAL FROM EMP WHERE ENAME ='JONES');

#KING 보다 급여가 많은 사람
SELECT ENAME, SAL FROM EMP
WHERE SAL > (SELECT SAL FROM EMP WHERE ENAME ='KING');

#'KING 보다 급여가 많은 사람'
#EMP 테이블의 사원 정보 중에서 사원 이름이
#ALLEN인 사원의 추가수당 보다 많이 받는 사원 정보를 구해주세요

SELECT *FROM EMP WHERE COMM > (SELECT COMM FROM EMP WHERE ENAME = 'ALLEN');

#9-4 서브쿼리의 결과 값이 날짜형의 경우
#ALLEN 보다 입사일이 빠른 직원은?
SELECT * FROM EMP WHERE HIREDATE < (SELECT HIREDATE FROM EMP WHERE ENAME = 'ALLEN');

#9-5 JOIN 구문에서도 SUBQUERY가 동작할까?
#평균급여보다 많이 받는 직원들의 정보는??
SELECT E.EMPNO, E.ENAME, E.JOB, E.SAL, D.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND E.SAL > (SELECT AVG(SAL)FROM EMP);

SELECT * FROM EMP WHERE HIREDATE < (SELECT HIREDATE FROM EMP WHERE ENAME = 'ALLEN');

SELECT E.EMPNO, E.ENAME, E.JOB, E.SAL, D.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND E.SAL > (SELECT AVG(SAL) FROM EMP);

# 다중행 연산자
# IN 메인쿼리의 데이터가 서브쿼리의 결과 중 하나 라도 일치한 데이터가 있다면 TRUE
# ANY, SOME 메인쿼리의 데이터가 조건식을 만족하는 서브쿼리의 결과가 하나 이상이면 TRUE
# ALL 메인쿼리의 조건식을 서브쿼리의 결과 모두가 만족하면 TRUE
# EXISTS 서브쿼리의 겨로가가 존재하면 (즉, 행이 1개 이상일 경우) TRUE
# 실행 결과가 여러개인 쿼리를 확인~!!

SELECT * FROM EMP WHERE DEPTNO IN (20,30);

SELECT * FROM EMP WHERE SAL IN (SELECT MAX(SAL)FROM EMP 
GROUP BY DEPTNO)
ORDER BY DEPTNO;

SELECT MAX(SAL)FROM EMP 
GROUP BY DEPTNO;

#ANY
SELECT * FROM EMP WHERE SAL = ANY (SELECT MAX(SAL)FROM EMP 
GROUP BY DEPTNO)
ORDER BY DEPTNO;

#SOME
SELECT * FROM EMP WHERE SAL= SOME (SELECT MAX(SAL)FROM EMP 
GROUP BY DEPTNO)
ORDER BY DEPTNO;

#ANY 30번 부서 사원들의 최대 급여보다 적은 급여를 받는 사원정보 출력
SELECT MAX(SAL) FROM EMP WHERE DEPTNO = 30;

SELECT * FROM EMP
WHERE SAL < ANY (SELECT MAX(SAL) FROM EMP WHERE DEPTNO = 30)
ORDER BY SAL ,EMPNO;

#9-14 ALL
# 30번 부서번호인 사원들의 최소 급여 보다 더 적은 급여를 받는다.

SELECT * FROM EMP WHERE SAL < ALL (SELECT SAL FROM EMP WHERE DEPTNO =30);
SELECT * FROM EMP WHERE SAL < ANY (SELECT SAL FROM EMP WHERE DEPTNO =30);

#EXISTS 연산자
#서브쿼리에 값이 존재하는 경우!!1
SELECT DNAME FROM DEPT WHERE DEPTNO = 10;
#EMP 테이블에 회계부서가 존재하는가?
SELECT * FROM EMP
WHERE EXISTS (SELECT DNAME FROM DEPT WHERE DEPTNO = 10);
#없는 50번 부서 문의
SELECT * FROM EMP
WHERE EXISTS (SELECT DNAME FROM DEPT WHERE DEPTNO = 50);

#비교할 열이 여러 개인 다중열 서브쿼리
SELECT DEPTNO, MAX(SAL) FROM EMP
GROUP BY DEPTNO;

SELECT * FROM EMP
WHERE (DEPTNO, SAL) IN (SELECT DEPTNO, MAX(SAL) FROM EMP
GROUP BY DEPTNO);

#1번

SELECT E.JOB, E.EMPNO, E.ENAME, E.SAL, E.DEPTNO, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND JOB = (SELECT JOB FROM EMP WHERE ENAME = 'ALLEN')
ORDER BY SAL DESC;

SELECT E.JOB, E.EMPNO, E.ENAME, E.SAL, E.DEPTNO, D.DNAME
FROM EMP E JOIN DEPT D ON E.DEPTNO = D.DEPTNO
WHERE JOB = (SELECT JOB FROM EMP WHERE ENAME = 'ALLEN')
ORDER BY SAL DESC;

#2번

SELECT E.EMPNO, E.ENAME, D.DNAME, TO_CHAR(E.HIREDATE,'YYYY-MM-DD')AS HIREDATE, D.LOC, E.SAL, S.GRADE
FROM EMP E JOIN DEPT D ON E.DEPTNO = D.DEPTNO
JOIN SALGRADE S ON E.SAL BETWEEN S.LOSAL AND S.HISAL
WHERE E.SAL > (SELECT AVG(SAL) FROM EMP)
ORDER BY SAL DESC, EMPNO ;

SELECT E.EMPNO, E.ENAME, D.DNAME, TO_CHAR(E.HIREDATE,'YYYY-MM-DD')AS HIREDATE, D.LOC, E.SAL, S.GRADE
FROM EMP E, DEPT D, SALGRADE S
WHERE E.DEPTNO = D.DEPTNO AND E.SAL BETWEEN S.LOSAL AND S.HISAL
AND SAL > (SELECT AVG(SAL) FROM EMP)
ORDER BY SAL DESC, EMPNO ;
